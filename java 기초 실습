public class _03_scopeOfVariables {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//1.  메인메소드 지역변수
		//메인 메소드에서만 사용가능
		int num1 = 100;
		
		//2. 제어문의 지역변수
		if(num1> 50) {
			int num2 = 50;
			//제어문은 메인 메소드에 포함되어 있어 메인메소드의 지역변수인 num1 사용가능
			System.out.println(num1 + "," + num2);		}
		//num2가 제어문의 지역변수이기 때문에 제어문 밖에서는 사용 불가능
		//System.out.println(num1 + "," + num2);
		//메소드 호출
		//메소드가 호출될 때
		//메소드의 지역변수가 메모리에 저장
		checkScope();
		//메소드의 호출이 끝났을 때 지역변수가 메모리에서 탑제
		
		//num3 checkScope()에서 선언된 지역변수 이므로 메인 메소드에서는 사용할 수 없다.
	}
//메소드
	public static void checkScope() {
		//사용자 정의 메소드 지역변수
		int num3 = 10;
		System.out.println(num3);

	}
}

public class _04_byte {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		byte num1 = -128;
		byte num2 = 127;
		
		//2. byte의 범위를 넘어가는 값의 할당
		//타입의 표현 범위보다 큰 값을 할당하면 에러 발생
		//byte num3 = -129;
		//byte num4 = 128;
		
		//3. 선언된 변수의 값 범위를 초과하도록 변경했을 때
		//증감연산자 --, ++
		//num1--; => num1 =num1-1
		//num2++; => num2 = num2+1
		num1--;
		//범위의 최소값보다 작아질 경우 127부터 다시 시작
		System.out.println(num1);
		num2++;
		System.out.println(num2);

	}

}

package DKFKDdf;

public class _05_charType {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// char 타입의 변수 선언 및 초기화
		char ch1 = 'A';
		char ch2 = 65;
		char ch3 = '\u0041';
		char ch4 = '가';
		char ch5 = 44032;
		char ch6 = '\uAC00';
		//2. 문자를 유니코드 10진수로 변환
		char ch7 ='자';
		//해당 char 타입의 변수를 int 변수에 저장하면 10진수 유니코드 값을 추출
		int uniCode = ch7;
		//형변환 char타입 변수 ch7을 int 타입으로 변경
		//3. 빈 칸을 사용할 때는 space 값을 추가해야된다.
		//char ch8 = '';
		char ch9 = ' ';
		
		//4. char 타입의 변수 출력
		System.out.println(ch1);
		System.out.println(ch2);
		System.out.println(ch3);
		System.out.println(ch4);
		System.out.println(ch5);
		System.out.println(ch6);
		System.out.println(ch7);
		System.out.println(uniCode);


		
	}
	

}

public class _06_int {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
 //1. 변수선언  및 초기화
		byte num1 = 10;
		short num2 = 20;
		
		int result = num1 + num2;
		
		System.out.println(result);
	}

}

대문자와 소문자 구분하기
package chap99_etc;

import java.io.IOException;

public class _01judgeAlphabet {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		// 1. 사용자 입력 값 받기
		//read():int 타입의 값을 반환하고 입력 값을 문자로 인식
		//리턴되는 int타입의 값은 문자의 유니코드(10진수)
		System.out.println("영문자 하나를입력하세요.: ");
		int inputUni= System.in.read();
		
		/*if(조건1) {
			조건이 참(ture)일 경우에만 동작
		}else if(조건2) { 
			조건 1은 거짓(flase)이고 조건2가 참(ture)인 경우 동작
		}else if(조건 3) {
			
		}else {
			위의 모든 조건이 거짓(false)일 때 실행*/
		
		//대문자 A 유니코드 65 알파벳 개수 26개
		//소문자 a 유니코드 97
		if(inputUni >= 65 && inputUni <= 90) {
			System.out.println("대문자입니다.");
		}else if(inputUni >=97 && inputUni <= 122) {
			System.out.println("소문자입니다.");
			
		}else{
			System.out.println("잘못 입력하셨습니다.");
	}

}
}

대소문자 변환하기
package chap99_etc;

import java.io.IOException;

public class _01judgeAlphabet {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		// 1. 사용자 입력 값 받기
		//read():int 타입의 값을 반환하고 입력 값을 문자로 인식
		//리턴되는 int타입의 값은 문자의 유니코드(10진수)
		System.out.println("영문자 하나를입력하세요.: ");
		int inputUni= System.in.read();
		
		/*if(조건1) {
			조건이 참(ture)일 경우에만 동작
		}else if(조건2) { 
			조건 1은 거짓(flase)이고 조건2가 참(ture)인 경우 동작
		}else if(조건 3) {
			
		}else {
			위의 모든 조건이 거짓(false)일 때 실행*/
		
		//대문자 A 유니코드 65 알파벳 개수 26개
		//소문자 a 유니코드 97
		if(inputUni >= 65 && inputUni <= 90) {
			System.out.println((char) (inputUni +32));
		}else if(inputUni >=97 && inputUni <= 122) {
			System.out.println((char) (inputUni -32));
			
		}else{
			System.out.println("잘못 입력하셨습니다.");
	}

}
}
//소문자로 들어왔을 때 해당 문자를 대문자롤 변경해서 출력
